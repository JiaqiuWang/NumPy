"""
描述：Numpy-高级索引
参考：https://www.runoob.com/numpy/numpy-advanced-indexing.html
作者：王佳秋
日期：2020年7月22日
"""


import numpy as np


if __name__ == "__main__":

    # 1.整数数组索引
    x = np.array([[1, 2], [3, 4], [5, 6]])
    print("x:\n", x)
    y = x[[0, 1, 2], [0, 1, 0]]  # 获取数组中(0,0)，(1,1)和(2,0)位置处的元素
    print("整数数组索引: \n", y)

    # 2.实例获取了 4X3 数组中的四个角的元素。 行索引是 [0,0] 和 [3,3]，而列索引是 [0,2] 和 [0,2]。
    x = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]])
    print("我们的数组是：\n", x)
    rows = np.array([[0, 0], [3, 3]])
    cols = np.array([[0, 2], [0, 2]])
    y = x[rows, cols]
    print('\n这个数组的四个角元素是：\n', y)
    """四个角的点坐标为[0, 0], [0, 2], [3, 0], [3, 2]，竖着看，挑选出4个点的行坐标和纵坐标"""

    # 3.借助切片:或...与索引数组组合
    a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    b = a[1:3, 1:3]  # 第2、3行，第2、3列
    print("b:\n", b)
    c = a[1:3, [1, 2]]  # 第2、3行，第2、3列
    print("c:\n", c)
    d = a[..., 1:]  # 第2列往后
    print("d:\n", d)

    # 4.布尔索引
    x = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]])
    print("我们的数组：\n", x)
    # 打印出大于5的元素
    print("\n数组中大于5的元素：\n", x[x > 5])

    # 5. ~取补运算符来过滤NaN
    a = np.array([np.nan, 1, 2, np.nan, 3, 4, 5])
    print("~取补运算符过滤数组中的Nan元素：", a[~np.isnan(a)])

    # 6.从数组中过滤非复数元素
    a = np.array([1, 2 + 6j, 5, 3.5 + 5j])
    print("从数组中过滤非复数元素:", a[np.iscomplex(a)])

    # 7.花式索引
    # 7.1传入顺序索引数组
    x = np.arange(32).reshape(8, 4)
    print("x:\n", x)
    print("x:", x[[4, 2, 1, 7]])

    # 7.2传入倒序索引数组
    x = np.arange(32).reshape(8, 4)
    print(x[[-4, -2, -1, -7]])

    # 7.3传入多个索引数组（要使用np.ix_）
    x = np.arange(32).reshape(8, 4)
    print(x[np.ix_([1, 5, 7, 2], [0, 3, 1, 2])])  # （x, y）竖着看


